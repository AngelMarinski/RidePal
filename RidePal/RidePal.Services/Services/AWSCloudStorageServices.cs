using Amazon;
using Amazon.S3;
using Amazon.S3.Transfer;
using Microsoft.AspNetCore.Http;
using RidePal.Services.Interfaces;
using System.IO;
using System.Threading.Tasks;

namespace RidePal.Services.Services
{
    public class AWSCloudStorageServices : IAWSCloudStorageService
    {
        public async Task Upload(IFormFile file, string fileName)
        {
            // access key id and secret key id, can be generated by navigating to IAM roles in AWS and then add new user, select permissions
            //for this example, try giving S3 full permissions
            using (var client = new AmazonS3Client("AKIAWQP65EKA577HVWO4", "1D2HJKafJbbyH5FJQKKHzDwJ+43jRD4F2l7d4jeo", RegionEndpoint.USEast1))
            {
                using (var newMemoryStream = new MemoryStream())
                {
                    file.CopyTo(newMemoryStream);

                    var uploadRequest = new TransferUtilityUploadRequest
                    {
                        InputStream = newMemoryStream,
                        Key = /*file.FileName*/fileName, // filename
                        BucketName = "ridepalbucket" // bucket name of S3
                    };

                    var fileTransferUtility = new TransferUtility(client);
                    await fileTransferUtility.UploadAsync(uploadRequest);
                }
            }
        }

        public async Task<string> UploadPlaylistImage(byte[] bytes, string playlistName)
        {
            using (var client = new AmazonS3Client("AKIAWQP65EKA577HVWO4", "1D2HJKafJbbyH5FJQKKHzDwJ+43jRD4F2l7d4jeo", RegionEndpoint.USEast1))
            {
                using (var newMemoryStream = new MemoryStream(bytes))
                {
                    var uploadRequest = new TransferUtilityUploadRequest
                    {
                        InputStream = newMemoryStream,
                        Key = playlistName, // filename
                        BucketName = "ridepalbucket" // bucket name of S3
                    };

                    var fileTransferUtility = new TransferUtility(client);
                    await fileTransferUtility.UploadAsync(uploadRequest);
                    return "https://ridepalbucket.s3.amazonaws.com/" + uploadRequest.Key;
                }
            }
        }
    }
}